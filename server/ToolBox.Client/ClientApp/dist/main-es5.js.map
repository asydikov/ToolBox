{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_directives/click-stop-propagation.ts","webpack:///src/app/_helpers/auth-guard.ts","webpack:///src/app/_helpers/error-interceptor.ts","webpack:///src/app/_helpers/jwt-interceptor.ts","webpack:///src/app/_models/User.ts","webpack:///src/app/_models/refresh-token.ts","webpack:///src/app/_models/sign-in.ts","webpack:///src/app/_services/identity.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/horizontal-nav/horizontal-nav.component.ts","webpack:///src/app/horizontal-nav/horizontal-nav.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ClickStopPropagation","event","selector","AuthGuard","router","identityService","route","state","currentUser","currentUserValue","navigate","providedIn","ErrorInterceptor","request","next","handle","pipe","err","indexOf","status","logout","error","message","statusText","JwtInterceptor","isLoggedIn","accesTokenFromLocalStorage","isApiUrl","url","startsWith","apiUrl","clone","setHeaders","Authorization","User","email","name","RefreshToken","refreshToken","token","SignIn","password","IdentityService","http","currentUserSubject","userFromLocalStorage","asObservable","signInModel","post","accessToken","localStorage","setItem","JSON","stringify","claims","removeItem","refreshTokenFromLocalStorage","value","userToken","userTokenFromLocalStorage","userName","userEmail","parse","getItem","routes","path","redirectTo","pathMatch","component","loadChildren","m","SqlMonitorModule","data","title","canActivate","AppRoutingModule","forRoot","imports","AppComponent","subscribe","user","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","HorizontalNavComponent","activatedRoute","events","firstChild","outlet","LoginComponent","formBuilder","submitted","loading","loginForm","group","compose","required","invalid","signIn","form","controls","onSubmit","NavComponent","environment","production","sqlmonitoryService","bootstrapModule","catch","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: \"[click-stop-propagation]\"\r\n})\r\nexport class ClickStopPropagation\r\n{\r\n    @HostListener(\"click\", [\"$event\"])\r\n    public onClick(event: any): void\r\n    {\r\n    //     event.stopPropagation();\r\n    //    event.preventDefault();\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { IdentityService } from '../_services/identity.service';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private identityService: IdentityService\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const currentUser = this.identityService.currentUserValue;\r\n        if (currentUser) {\r\n            return true;\r\n        }\r\n        this.router.navigate(['/login']);\r\n        return false;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { IdentityService } from '../_services/identity.service';\r\n\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private  identityService: IdentityService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n       return next.handle(request).pipe(catchError(err => {\r\n            if ([401, 403].indexOf(err.status) !== -1) {\r\n                this.identityService.logout();\r\n            }\r\n\r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n       }))\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { IdentityService } from '../_services/identity.service';\r\n\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private identityService: IdentityService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add auth header with jwt if user is logged in and request is to api url\r\n        const currentUser = this.identityService.currentUserValue;\r\n        const isLoggedIn = currentUser && this.identityService.accesTokenFromLocalStorage;\r\n        const isApiUrl = request.url.startsWith(environment.apiUrl);\r\n        if (isLoggedIn && isApiUrl) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${this.identityService.accesTokenFromLocalStorage}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","export class User{\r\n    email: string;\r\n    name: string;\r\n    /**\r\n     *\r\n     */\r\n    constructor( email:string,  name:string) {\r\n        this.email = email ?? '';\r\n        this.name = name ?? '';\r\n    }\r\n}","export class RefreshToken{\r\n    token:string;\r\n    /**\r\n     *\r\n     */\r\n    constructor(refreshToken:string) {\r\n     this.token = refreshToken;\r\n    }\r\n}","\r\nexport class SignIn{\r\n    email:string;\r\n    password:string;\r\n    /**\r\n     *\r\n     */\r\n    constructor(email:string, password:string) {\r\n       this.email = email;\r\n       this.password=password;\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { SignIn } from '../_models/sign-in';\nimport { User } from '../_models/User';\nimport { environment } from 'src/environments/environment';\nimport { JsonWebToken } from '../_models/json-web-token';\nimport { RefreshToken } from '../_models/refresh-token';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IdentityService {\n\n  private currentUserSubject: BehaviorSubject<User>;\n  public currentUser: Observable<User>;\n\n  constructor(private http: HttpClient,  private router: Router,) {\n    this.currentUserSubject = new BehaviorSubject<User>(this.userFromLocalStorage);\n    this.currentUser = this.currentUserSubject.asObservable();\n   }\n\n   public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n}\n\npublic get accesTokenFromLocalStorage():string{\n  let userToken = this.userTokenFromLocalStorage;\n  let token = userToken?.accessToken;\n  if(!userToken || !token )\n  {\n    return null;\n  }\nreturn token;\n}\n\npublic get refreshTokenFromLocalStorage():string{\n  let userToken = this.userTokenFromLocalStorage;\n  return userToken?.refreshToken;\n}\n\nprivate get userFromLocalStorage():User{\n  let userToken = this.userTokenFromLocalStorage;\n  let userName = userToken?.claims.name ??'';\n  let userEmail =  userToken?.claims.email ?? '';\n  if(!userToken || !userName || !userEmail)\n  {\n    return null;\n  }\nreturn new User(userEmail, userName);\n}\n\nprivate get userTokenFromLocalStorage():JsonWebToken{\n  return JSON.parse(localStorage.getItem('userToken'));\n}\n\n  signIn(email:string, password:string) {\n    let signInModel = new SignIn(email, password);\n    return this.http.post<JsonWebToken>(`${environment.apiUrl}/${environment.identityService}/sign-in`, signInModel)\n        .pipe(map(token => {\n            // login successful if there's a jwt token in the response\n            if (token && token.accessToken) {\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n                localStorage.setItem('userToken', JSON.stringify(token));\n                this.currentUserSubject.next(new User(token.claims.email, token.claims.name));\n            } else {\n              token = null;\n            }\n            return token; \n        }));\n}\n\nlogout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('userToken');\n    this.router.navigate(['login']);\n    this.currentUserSubject.next(null);\n}\n\n\nrefreshToken(){\n  let refreshToken = new RefreshToken(this.refreshTokenFromLocalStorage);\n  return this.http.post<JsonWebToken>(`${environment.apiUrl}/${environment.identityService}/token-refresh`, refreshToken)\n  .pipe(map(token => {\n      if (token && token.accessToken) {\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\n          localStorage.setItem('userToken', JSON.stringify(token));\n          this.currentUserSubject.next(new User(token.claims.email, token.claims.name));\n      } else {\n        token = null;\n      }\n      return token; \n  }));\n}\n }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { SqlMonitorModule } from './sql-monitor/sql-monitor.module';\nimport { AuthGuard } from './_helpers/auth-guard';\n\n\nconst routes: Routes = [\n \n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n   { path: 'login', component: LoginComponent },\n   {\n    path: 'dashboard',\n    loadChildren: () => import('./sql-monitor/sql-monitor.module').then(m => m.SqlMonitorModule),\n    data: { title: 'Dashboard' },\n   canActivate: [AuthGuard]\n  }   \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { IdentityService } from './_services/identity.service';\nimport { User } from './_models/User';\nimport { NotificationService } from './_services/notification.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  currentUser: User;\n  \n  constructor(private identityService: IdentityService) {\n      this.identityService.currentUser.subscribe(user => this.currentUser = user);\n     }\n}\n\n\n\n\n","<div class=\"row app-row\">\n    <app-nav class=\"col-lg-2 horizontal-nav-container\" *ngIf=\"currentUser\"></app-nav>\n    <div [ngClass]=\"{ 'col-lg-12': !currentUser,  'col-lg-10': currentUser}\" class=\"body-container\">\n        <app-horizontal-nav *ngIf=\"currentUser\"></app-horizontal-nav>\n        <div class=\"router-outlet-container\">\n            <router-outlet></router-outlet> \n        </div>\n    </div>\n</div>\n\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule, FormBuilder } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { NavComponent } from './nav/nav.component';\nimport { JwtInterceptor } from './_helpers/jwt-interceptor';\nimport { ErrorInterceptor } from './_helpers/error-interceptor';\nimport { HorizontalNavComponent } from './horizontal-nav/horizontal-nav.component';\nimport { ClickStopPropagation } from './_directives/click-stop-propagation';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent, \n    NavComponent,\n    HorizontalNavComponent,\n    ClickStopPropagation,\n   \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AppRoutingModule\n    \n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n   { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationEnd, ActivatedRoute, Route } from '@angular/router';\nimport { filter,map, mergeMap } from 'rxjs/operators';\nimport { User } from '../_models/User';\nimport { IdentityService } from '../_services/identity.service';\n\n@Component({\n  selector: 'app-horizontal-nav',\n  templateUrl: './horizontal-nav.component.html',\n  styleUrls: ['./horizontal-nav.component.scss']\n})\nexport class HorizontalNavComponent implements OnInit {\ntitle:string = 'Dashboard';\ncurrentUser: User;\n  constructor(private router:Router,\n    private activatedRoute:ActivatedRoute,\n    private identityService: IdentityService ) { \n      this.identityService.currentUser.subscribe(user => this.currentUser = user);\n    }\n\n  ngOnInit(): void {\n    this.router.events.pipe(\n      filter((event) => event instanceof NavigationEnd),\n      map(() => this.activatedRoute),\n      map((route) => {\n        while (route.firstChild) route = route.firstChild;\n        return route;\n      }),\n      filter((route) => route.outlet === 'primary'),\n      mergeMap((route) => route.data),\n    ).subscribe((data) => {\n      this.title = data['title'];\n    })\n  }\n\n}\n","\n<div class=\"alert alert-dark horizontal-nav\" role=\"alert\" style=\"background-color: black;opacity: 0.85; border: 0px; color: white;\">\n<div class=\"row justify-content-between\"> \n  <h3 class=\"ml-4\"> {{title}}</h3>\n  <div class=\"d-flex align-items-center\">\n    <span class=\"mr-4\" style=\"font-size: 19px;\"> Welcome <span style=\" font-weight: bold;\">{{currentUser.name}}</span></span>\n  </div>\n\n</div>\n \n  </div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { IdentityService } from '../_services/identity.service';\nimport { SignIn } from '../_models/sign-in';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  submitted = false;\n  loading = false;\n  error = '';\n  loginForm: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private identityService: IdentityService\n  ) {  }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.compose([Validators.required, Validators.email])],\n      password: ['', Validators.required]\n    });\n\n    this.identityService.logout();\n  }\n\n    // convenience getter for easy access to form fields\n    get form() { return this.loginForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    }\n    this.loading = true;\n    this.identityService.signIn(this.form.email.value, this.form.password.value)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this.router.navigate(['dashboard']);\n        },\n        error => {\n          this.error = error;\n          this.loading = false;\n        });\n  }\n\n}\n","\n<h2 class=\"text-monospace font-weight-bold text-center col-sm-12 mb-4\" style=\"padding-top: 100px;\">ToolBox</h2>\n<div class=\"d-flex justify-content-center login-container col-sm-12\">  \n<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" class=\"col-sm-4\">\n    <div class=\"form-group\">\n      <input type=\"email\" placeholder=\"Email address\" formControlName=\"email\" class=\"form-control\"\n       [ngClass]=\"{ 'is-invalid': submitted && form.email.errors }\" >\n       <div *ngIf=\"submitted && form.email.errors\" class=\"invalid-feedback\">\n        <div *ngIf=\"form.email.errors.email\">Please enter email</div>\n        <div *ngIf=\"form.email.errors.required\">Email is required</div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <input type=\"password\" placeholder=\"Password\" formControlName=\"password\" class=\"form-control\" \n       [ngClass]=\"{ 'is-invalid': submitted && form.password.errors }\" />\n      <div *ngIf=\"submitted && form.password.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"form.password.errors.required\">Password is required</div>\n      </div>\n    </div>\n    <button [disabled]=\"loading\" class=\"btn btn-outline-primary col-sm-12\">\n      <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n      Sign in\n  </button>\n  <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\n  </form>\n</div>  \n\n\n","import { Component, OnInit } from '@angular/core';\nimport { IdentityService } from '../_services/identity.service';\nimport { Router } from '@angular/router';\nimport { User } from '../_models/User';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n\n  currentUser: User;\n  \n  constructor(private router: Router,\n    private identityService: IdentityService) {\n      this.identityService.currentUser.subscribe(user => this.currentUser = user);\n     }\n\n  ngOnInit(): void {\n  }\n\n  logout() {\n    this.identityService.logout();\n    this.router.navigate(['/login']);\n  }\n\n}\n","<nav id=\"sidebar\" *ngIf=\"currentUser\">\n  \n  <div class=\"img bg-wrap text-center py-4\">\n      <div class=\"user-logo\">\n        <i class=\"fa fa-database fa-5x mb-3\" style=\"color:red\"></i>\n          <h2 class=\"text-monospace\" style=\"color: white;\">ToolBox</h2>\n      </div>\n  </div>\n<ul class=\"list-unstyled components mb-5\">\n<li class=\"active\">\n<a [routerLink]=\"'dashboard'\"><span class=\"fa fa-home mr-3\"></span> Dashboard</a>\n</li>\n<li> \n  <a [routerLink]=\"'dashboard/servers/add'\">\n    <span class=\"fa  fa-server mr-3 notif\">\n    </span> Add Server</a>\n</li>\n<li>\n<li >\n<a [routerLink]=\"\" (click)=\"logout()\"><span class=\"fa fa-sign-out mr-3\"></span> Sign Out</a>\n</li>\n</ul>\n\n</nav>","export const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000/api',\n  identityService: 'identity',\n  sqlmonitoryService: 'sqlmonitor'\n};","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}