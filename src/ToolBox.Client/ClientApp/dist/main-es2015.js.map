{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_directives/click-stop-propagation.ts","./src/app/_helpers/auth-guard.ts","./src/app/_helpers/error-interceptor.ts","./src/app/_helpers/jwt-interceptor.ts","./src/app/_models/User.ts","./src/app/_models/refresh-token.ts","./src/app/_models/sign-in.ts","./src/app/_services/identity.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/horizontal-nav/horizontal-nav.component.ts","./src/app/horizontal-nav/horizontal-nav.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: \"[click-stop-propagation]\"\r\n})\r\nexport class ClickStopPropagation\r\n{\r\n    @HostListener(\"click\", [\"$event\"])\r\n    public onClick(event: any): void\r\n    {\r\n    //     event.stopPropagation();\r\n    //    event.preventDefault();\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { IdentityService } from '../_services/identity.service';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private identityService: IdentityService\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const currentUser = this.identityService.currentUserValue;\r\n        if (currentUser) {\r\n            return true;\r\n        }\r\n        this.router.navigate(['/login']);\r\n        return false;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { IdentityService } from '../_services/identity.service';\r\n\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private  identityService: IdentityService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n       return next.handle(request).pipe(catchError(err => {\r\n            if ([401, 403].indexOf(err.status) !== -1) {\r\n                this.identityService.logout();\r\n            }\r\n\r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n       }))\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { IdentityService } from '../_services/identity.service';\r\n\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private identityService: IdentityService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add auth header with jwt if user is logged in and request is to api url\r\n        const currentUser = this.identityService.currentUserValue;\r\n        const isLoggedIn = currentUser && this.identityService.accesTokenFromLocalStorage;\r\n        const isApiUrl = request.url.startsWith(environment.apiUrl);\r\n        if (isLoggedIn && isApiUrl) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${this.identityService.accesTokenFromLocalStorage}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","export class User{\r\n    email: string;\r\n    name: string;\r\n    /**\r\n     *\r\n     */\r\n    constructor( email:string,  name:string) {\r\n        this.email = email ?? '';\r\n        this.name = name ?? '';\r\n    }\r\n}","export class RefreshToken{\r\n    token:string;\r\n    /**\r\n     *\r\n     */\r\n    constructor(refreshToken:string) {\r\n     this.token = refreshToken;\r\n    }\r\n}","\r\nexport class SignIn{\r\n    email:string;\r\n    password:string;\r\n    /**\r\n     *\r\n     */\r\n    constructor(email:string, password:string) {\r\n       this.email = email;\r\n       this.password=password;\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { SignIn } from '../_models/sign-in';\nimport { User } from '../_models/User';\nimport { environment } from 'src/environments/environment';\nimport { JsonWebToken } from '../_models/json-web-token';\nimport { RefreshToken } from '../_models/refresh-token';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IdentityService {\n\n  private currentUserSubject: BehaviorSubject<User>;\n  public currentUser: Observable<User>;\n\n  constructor(private http: HttpClient,  private router: Router,) {\n    this.currentUserSubject = new BehaviorSubject<User>(this.userFromLocalStorage);\n    this.currentUser = this.currentUserSubject.asObservable();\n   }\n\n   public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n}\n\npublic get accesTokenFromLocalStorage():string{\n  let userToken = this.userTokenFromLocalStorage;\n  let token = userToken?.accessToken;\n  if(!userToken || !token )\n  {\n    return null;\n  }\nreturn token;\n}\n\npublic get refreshTokenFromLocalStorage():string{\n  let userToken = this.userTokenFromLocalStorage;\n  return userToken?.refreshToken;\n}\n\nprivate get userFromLocalStorage():User{\n  let userToken = this.userTokenFromLocalStorage;\n  let userName = userToken?.claims.name ??'';\n  let userEmail =  userToken?.claims.email ?? '';\n  if(!userToken || !userName || !userEmail)\n  {\n    return null;\n  }\nreturn new User(userEmail, userName);\n}\n\nprivate get userTokenFromLocalStorage():JsonWebToken{\n  return JSON.parse(localStorage.getItem('userToken'));\n}\n\n  signIn(email:string, password:string) {\n    let signInModel = new SignIn(email, password);\n    return this.http.post<JsonWebToken>(`${environment.apiUrl}/${environment.identityService}/sign-in`, signInModel)\n        .pipe(map(token => {\n            // login successful if there's a jwt token in the response\n            if (token && token.accessToken) {\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n                localStorage.setItem('userToken', JSON.stringify(token));\n                this.currentUserSubject.next(new User(token.claims.email, token.claims.name));\n            } else {\n              token = null;\n            }\n            return token; \n        }));\n}\n\nlogout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('userToken');\n    this.router.navigate(['login']);\n    this.currentUserSubject.next(null);\n}\n\n\nrefreshToken(){\n  let refreshToken = new RefreshToken(this.refreshTokenFromLocalStorage);\n  return this.http.post<JsonWebToken>(`${environment.apiUrl}/${environment.identityService}/token-refresh`, refreshToken)\n  .pipe(map(token => {\n      if (token && token.accessToken) {\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\n          localStorage.setItem('userToken', JSON.stringify(token));\n          this.currentUserSubject.next(new User(token.claims.email, token.claims.name));\n      } else {\n        token = null;\n      }\n      return token; \n  }));\n}\n }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { SqlMonitorModule } from './sql-monitor/sql-monitor.module';\nimport { AuthGuard } from './_helpers/auth-guard';\n\n\nconst routes: Routes = [\n \n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n   { path: 'login', component: LoginComponent },\n   {\n    path: 'dashboard',\n    loadChildren: () => import('./sql-monitor/sql-monitor.module').then(m => m.SqlMonitorModule),\n    data: { title: 'Dashboard' },\n   canActivate: [AuthGuard]\n  }   \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { IdentityService } from './_services/identity.service';\nimport { User } from './_models/User';\nimport { NotificationService } from './_services/notification.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  currentUser: User;\n  \n  constructor(private identityService: IdentityService) {\n      this.identityService.currentUser.subscribe(user => this.currentUser = user);\n     }\n}\n\n\n\n\n","<div class=\"row app-row\">\n    <app-nav class=\"col-lg-2 horizontal-nav-container\" *ngIf=\"currentUser\"></app-nav>\n    <div [ngClass]=\"{ 'col-lg-12': !currentUser,  'col-lg-10': currentUser}\" class=\"body-container\">\n        <app-horizontal-nav *ngIf=\"currentUser\"></app-horizontal-nav>\n        <div class=\"router-outlet-container\">\n            <router-outlet></router-outlet> \n        </div>\n    </div>\n</div>\n\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule, FormBuilder } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { NavComponent } from './nav/nav.component';\nimport { JwtInterceptor } from './_helpers/jwt-interceptor';\nimport { ErrorInterceptor } from './_helpers/error-interceptor';\nimport { HorizontalNavComponent } from './horizontal-nav/horizontal-nav.component';\nimport { ClickStopPropagation } from './_directives/click-stop-propagation';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent, \n    NavComponent,\n    HorizontalNavComponent,\n    ClickStopPropagation,\n   \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AppRoutingModule\n    \n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n   { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationEnd, ActivatedRoute, Route } from '@angular/router';\nimport { filter,map, mergeMap } from 'rxjs/operators';\nimport { User } from '../_models/User';\nimport { IdentityService } from '../_services/identity.service';\n\n@Component({\n  selector: 'app-horizontal-nav',\n  templateUrl: './horizontal-nav.component.html',\n  styleUrls: ['./horizontal-nav.component.scss']\n})\nexport class HorizontalNavComponent implements OnInit {\ntitle:string = 'Dashboard';\ncurrentUser: User;\n  constructor(private router:Router,\n    private activatedRoute:ActivatedRoute,\n    private identityService: IdentityService ) { \n      this.identityService.currentUser.subscribe(user => this.currentUser = user);\n    }\n\n  ngOnInit(): void {\n    this.router.events.pipe(\n      filter((event) => event instanceof NavigationEnd),\n      map(() => this.activatedRoute),\n      map((route) => {\n        while (route.firstChild) route = route.firstChild;\n        return route;\n      }),\n      filter((route) => route.outlet === 'primary'),\n      mergeMap((route) => route.data),\n    ).subscribe((data) => {\n      this.title = data['title'];\n    })\n  }\n\n}\n","\n<div class=\"alert alert-dark horizontal-nav\" role=\"alert\" style=\"background-color: black;opacity: 0.85; border: 0px; color: white;\">\n<div class=\"row justify-content-between\"> \n  <h3 class=\"ml-4\"> {{title}}</h3>\n  <div class=\"d-flex align-items-center\">\n    <span class=\"mr-4\" style=\"font-size: 19px;\"> Welcome <span style=\" font-weight: bold;\">{{currentUser.name}}</span></span>\n  </div>\n\n</div>\n \n  </div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { IdentityService } from '../_services/identity.service';\nimport { SignIn } from '../_models/sign-in';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  submitted = false;\n  loading = false;\n  error = '';\n  loginForm: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private identityService: IdentityService\n  ) {  }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.compose([Validators.required, Validators.email])],\n      password: ['', Validators.required]\n    });\n\n    this.identityService.logout();\n  }\n\n    // convenience getter for easy access to form fields\n    get form() { return this.loginForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    }\n    this.loading = true;\n    this.identityService.signIn(this.form.email.value, this.form.password.value)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this.router.navigate(['dashboard']);\n        },\n        error => {\n          this.error = error;\n          this.loading = false;\n        });\n  }\n\n}\n","\n<h2 class=\"text-monospace font-weight-bold text-center col-sm-12 mb-4\" style=\"padding-top: 100px;\">ToolBox</h2>\n<div class=\"d-flex justify-content-center login-container col-sm-12\">  \n<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" class=\"col-sm-4\">\n    <div class=\"form-group\">\n      <input type=\"email\" placeholder=\"Email address\" formControlName=\"email\" class=\"form-control\"\n       [ngClass]=\"{ 'is-invalid': submitted && form.email.errors }\" >\n       <div *ngIf=\"submitted && form.email.errors\" class=\"invalid-feedback\">\n        <div *ngIf=\"form.email.errors.email\">Please enter email</div>\n        <div *ngIf=\"form.email.errors.required\">Email is required</div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <input type=\"password\" placeholder=\"Password\" formControlName=\"password\" class=\"form-control\" \n       [ngClass]=\"{ 'is-invalid': submitted && form.password.errors }\" />\n      <div *ngIf=\"submitted && form.password.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"form.password.errors.required\">Password is required</div>\n      </div>\n    </div>\n    <button [disabled]=\"loading\" class=\"btn btn-outline-primary col-sm-12\">\n      <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n      Sign in\n  </button>\n  <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\n  </form>\n</div>  \n\n\n","import { Component, OnInit } from '@angular/core';\nimport { IdentityService } from '../_services/identity.service';\nimport { Router } from '@angular/router';\nimport { User } from '../_models/User';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n\n  currentUser: User;\n  \n  constructor(private router: Router,\n    private identityService: IdentityService) {\n      this.identityService.currentUser.subscribe(user => this.currentUser = user);\n     }\n\n  ngOnInit(): void {\n  }\n\n  logout() {\n    this.identityService.logout();\n    this.router.navigate(['/login']);\n  }\n\n}\n","<nav id=\"sidebar\" *ngIf=\"currentUser\">\n  \n  <div class=\"img bg-wrap text-center py-4\">\n      <div class=\"user-logo\">\n        <i class=\"fa fa-database fa-5x mb-3\" style=\"color:red\"></i>\n          <h2 class=\"text-monospace\" style=\"color: white;\">ToolBox</h2>\n      </div>\n  </div>\n<ul class=\"list-unstyled components mb-5\">\n<li class=\"active\">\n<a [routerLink]=\"'dashboard'\"><span class=\"fa fa-home mr-3\"></span> Dashboard</a>\n</li>\n<li> \n  <a [routerLink]=\"'dashboard/servers/add'\">\n    <span class=\"fa  fa-server mr-3 notif\">\n    </span> Add Server</a>\n</li>\n<li>\n<li >\n<a [routerLink]=\"\" (click)=\"logout()\"><span class=\"fa fa-sign-out mr-3\"></span> Sign Out</a>\n</li>\n</ul>\n\n</nav>","export const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000/api',\n  identityService: 'identity',\n  sqlmonitoryService: 'sqlmonitor'\n};","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}